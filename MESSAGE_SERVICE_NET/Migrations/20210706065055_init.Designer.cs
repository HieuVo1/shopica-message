// <auto-generated />
using System;
using MESSAGE_SERVICE_NET.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MESSAGE_SERVICE_NET.Migrations
{
    [DbContext(typeof(MessageDbContext))]
    [Migration("20210706065055_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("MESSAGE_SERVICE_NET.Models.Attachments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime");

                    b.Property<string>("File_url")
                        .HasColumnType("text");

                    b.Property<int>("Message_id")
                        .HasColumnType("int");

                    b.Property<string>("Thumb_url")
                        .HasColumnType("text");

                    b.Property<DateTime>("Update_at")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("Message_id");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("MESSAGE_SERVICE_NET.Models.Conversations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime");

                    b.Property<int>("Creator_id")
                        .HasColumnType("int");

                    b.Property<string>("Image_url")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<DateTime>("Update_at")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Conversations");
                });

            modelBuilder.Entity("MESSAGE_SERVICE_NET.Models.Messages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<int>("Conversation_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsRead")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Sender_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Update_at")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("Conversation_id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("MESSAGE_SERVICE_NET.Models.Participants", b =>
                {
                    b.Property<int>("Conversation_id")
                        .HasColumnType("int");

                    b.Property<int>("User_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Update_at")
                        .HasColumnType("datetime");

                    b.HasKey("Conversation_id", "User_id");

                    b.HasIndex("User_id");

                    b.ToTable("Participants");
                });

            modelBuilder.Entity("MESSAGE_SERVICE_NET.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<DateTime>("Update_at")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MESSAGE_SERVICE_NET.Models.Attachments", b =>
                {
                    b.HasOne("MESSAGE_SERVICE_NET.Models.Messages", "Message")
                        .WithMany("Attachments")
                        .HasForeignKey("Message_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Message");
                });

            modelBuilder.Entity("MESSAGE_SERVICE_NET.Models.Messages", b =>
                {
                    b.HasOne("MESSAGE_SERVICE_NET.Models.Conversations", "Conversation")
                        .WithMany("Messages")
                        .HasForeignKey("Conversation_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conversation");
                });

            modelBuilder.Entity("MESSAGE_SERVICE_NET.Models.Participants", b =>
                {
                    b.HasOne("MESSAGE_SERVICE_NET.Models.Conversations", "Conversation")
                        .WithMany("Participants")
                        .HasForeignKey("Conversation_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MESSAGE_SERVICE_NET.Models.Users", "User")
                        .WithMany("Participants")
                        .HasForeignKey("User_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conversation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MESSAGE_SERVICE_NET.Models.Conversations", b =>
                {
                    b.Navigation("Messages");

                    b.Navigation("Participants");
                });

            modelBuilder.Entity("MESSAGE_SERVICE_NET.Models.Messages", b =>
                {
                    b.Navigation("Attachments");
                });

            modelBuilder.Entity("MESSAGE_SERVICE_NET.Models.Users", b =>
                {
                    b.Navigation("Participants");
                });
#pragma warning restore 612, 618
        }
    }
}
